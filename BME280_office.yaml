substitutions:
  loc: "office"

esphome:
  name: esphome_bme280_${loc}
  friendly_name: ${loc} environment
  platformio_options:
    board_build.f_flash: 40000000L
    board_build.flash_mode: dio
    board_build.flash_size: 4MB
  on_shutdown:
    priority: 600 
    then:
      - lambda: |-
          id(wake_counter) += 1;

esp32:
  board: esp32-c3-devkitm-1
  variant: esp32c3
  framework:
    type: arduino

logger:
  level: WARN

api:
  password: ""
  reboot_timeout: 0s

ota:
  - platform: esphome
    password: ""

wifi:
  fast_connect: true
  ssid: !secret wifi_ssid
  password: !secret wifi_password

web_server:
captive_portal: 
mdns: 

i2c:
  sda: 5
  scl: 6
  scan: true
  id: bus_a

# full charge in millicoulumbs; LR91 LiPo used
# Charge per use measured by PPK2
globals:
  - id: fullcharge
    type: int
    initial_value: "10800000"
  - id: charge_per_use
    type: int
    initial_value: "250"
  - id: wake_counter
    type: int
    restore_value: yes
    initial_value: "0"

# Using altrnative i2c addr (0x76) since SDO is grounded
sensor:
  - platform: template
    id: battery_lvl
    update_interval: 30s
    name: "Battery Level"
    unit_of_measurement: "%"
    device_class: "battery"
    accuracy_decimals: 0
    lambda: |-
      ESP_LOGD("LOGGER", "Counter: %d", id(wake_counter));
      return 100 - id(wake_counter) * id(charge_per_use) * 100.0 / id(fullcharge);
  - platform: template
    name: "Number of Measurements"
    accuracy_decimals: 0
    lambda: |-
      return id(wake_counter);
  - platform: bme280_i2c
    temperature:
      name: "Temperature"
      id: t
    pressure:
      name: "Pressure"
      id: p
    humidity:
      name: "RH"
      id: h
    address: 0x76
    update_interval: 60s

binary_sensor:
  - platform: status
    name: "Temp/Humidity/Barometric Sensor Status"
    id: system_status

deep_sleep: 
  id: sleeper
  run_duration: 4s
  sleep_duration: 30min
#  run_duration: 1min
#  sleep_duration: 1s
